@import "tailwindcss";
@config "./tailwind.config.js";
@import "./actiontext.css";

.font-serif {
  font-family: 'Cormorant Garamond', serif;
}

.font-sans {
  font-family: 'Inter', sans-serif;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom responsive utilities */
@layer utilities {
  /* Touch-friendly buttons for mobile */
  .touch-target {
    min-height: 44px;
    min-width: 44px;
  }
  
  /* Improved text readability on mobile */
  .mobile-text {
    -webkit-text-size-adjust: 100%;
    text-size-adjust: 100%;
  }
  
  /* Prevent zoom on focus for iOS */
  @media screen and (max-width: 768px) {
    input, textarea, select {
      font-size: 16px !important;
    }
  }
  
  /* Safe area for mobile with notches */
  .safe-area-inset {
    padding-top: env(safe-area-inset-top);
    padding-right: env(safe-area-inset-right);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
  }
  
  /* Improved scrolling on mobile */
  .smooth-scroll {
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
  }
  
  /* Better tap highlighting for mobile */
  .tap-highlight-transparent {
    -webkit-tap-highlight-color: transparent;
  }
  
  /* Prevent text selection on UI elements */
  .no-select {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
}

/* Mobile-specific animations */
@media (prefers-reduced-motion: no-preference) {
  .animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

/* Focus states for better accessibility */
@layer base {
  button:focus-visible,
  a:focus-visible,
  input:focus-visible,
  textarea:focus-visible,
  select:focus-visible {
    outline: 2px solid #fbbf24;
    outline-offset: 2px;
  }
}

/* Mobile viewport units fix */
:root {
  --vh: 1vh;
}

@media screen and (max-width: 768px) {
  :root {
    --vh: calc(1vh - 1px);
  }
}

.min-h-screen-mobile {
  min-height: calc(var(--vh, 1vh) * 100);
}