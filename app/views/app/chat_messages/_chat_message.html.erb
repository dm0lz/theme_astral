<div id="<%= dom_id chat_message %>">
  <div class="flex <%= chat_message.author == 'user' ? 'justify-start' : 'justify-end' %> mb-3 sm:mb-4">
    <div class="max-w-[85%] sm:max-w-xs md:max-w-md lg:max-w-lg xl:max-w-xl px-3 sm:px-4 py-2 sm:py-3 rounded-2xl shadow-lg bg-indigo-900/60 border border-indigo-800/30 <%= chat_message.author == 'user' ? 'bg-amber-600/90 border border-amber-500/50 rounded-bl-none' : 'bg-indigo-600/90 border border-indigo-500/50 rounded-br-none' %> text-white">
      <div class="whitespace-pre-line break-words overflow-wrap-anywhere leading-relaxed p-1 sm:p-2 min-w-0 w-full text-sm sm:text-base">
        <%= chat_message.body %>
      </div>
      <div class="flex items-center justify-between mt-2 sm:mt-3 pt-2 border-t border-white/20 p-1 sm:p-2">
        <div class="flex items-center space-x-1 sm:space-x-2">
          <div class="w-5 h-5 sm:w-6 sm:h-6 rounded-full flex items-center justify-center <%= chat_message.author == 'user' ? 'bg-amber-500' : 'bg-indigo-500' %>">
            <span class="text-xs font-medium text-white"><%= chat_message.author == 'user' ? 'U' : 'AI' %></span>
          </div>
          <span class="text-xs font-medium text-white/90 hidden sm:inline"><%= chat_message.author == 'user' ? 'You' : 'Assistant' %></span>
          <button 
            data-controller="tts"
            data-action="click->tts#speakMessage"
            data-tts-text-value="<%= chat_message.body.gsub('"', '&quot;') %>"
            data-speaking="false"
            data-tts-message-id="<%= dom_id(chat_message) %>"
            class="text-white/70 hover:text-white transition-colors duration-200 p-1 rounded hover:bg-white/10"
            title="Read message aloud"
          >
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
              <path d="M5 9v6h4l5 5V4L9 9H5z"></path>
              <path d="M15 9.5a3.5 3.5 0 010 5" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path>
              <path d="M17.5 7a6 6 0 010 10" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path>
            </svg>
          </button>
        </div>
        
        <div class="flex items-center space-x-1 sm:space-x-2">
          <button 
            onclick="copyToClipboard('<%= dom_id chat_message %>')"
            class="text-white/70 hover:text-white transition-colors duration-200 p-1 rounded hover:bg-white/10"
            title="Copy message"
          >
            <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
            </svg>
          </button>
          <div class="text-xs text-white/70">
            <%= chat_message.created_at.strftime('%H:%M') if chat_message.respond_to?(:created_at) && chat_message.created_at %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function copyToClipboard(messageId) {
  const messageElement = document.getElementById(messageId);
  const messageText = messageElement.querySelector('.whitespace-pre-line').textContent.trim();
  
  navigator.clipboard.writeText(messageText).then(function() {
    // Show success feedback
    const button = messageElement.querySelector('button');
    const originalHTML = button.innerHTML;
    
    // Temporarily show checkmark
    button.innerHTML = `
      <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
      </svg>
    `;
    button.classList.add('text-green-400');
    
    // Reset after 2 seconds
    setTimeout(() => {
      button.innerHTML = originalHTML;
      button.classList.remove('text-green-400');
    }, 2000);
  }).catch(function(err) {
    console.error('Could not copy text: ', err);
    // Fallback for older browsers
    const textArea = document.createElement('textarea');
    textArea.value = messageText;
    document.body.appendChild(textArea);
    textArea.select();
    document.execCommand('copy');
    document.body.removeChild(textArea);
  });
}
</script>
